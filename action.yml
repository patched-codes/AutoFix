name: 'Patchwork AutoFix'
description: 'Run Autofix patchflow using patchwork-cli to automatically fix code vulnerabilities'
branding:
  icon: 'shield'
  color: 'green'
author: '@patched-codes'

inputs:
  github_token:
    description: 'GitHub token for creating pull requests'
    required: false
    default: ${{ github.token }}
  openai_api_key:
    description: 'OpenAI API key for the LLM'
    required: false
  patched_api_key:
    description: 'Patched API key for using Patched services'
    required: false
  model:
    description: 'LLM model to use (default: gpt-3.5-turbo)'
    required: false
    default: 'gpt-3.5-turbo'
  client_base_url:
    description: 'Base URL for the LLM API (default: https://api.openai.com/v1)'
    required: false
    default: 'https://api.openai.com/v1'
  vulnerability_limit:
    description: 'Maximum number of vulnerabilities to fix (default: 10, -1 for no limit)'
    required: false
    default: '10'
  severity:
    description: 'Minimum severity level of vulnerabilities to fix (unknown/note/info/warning/low/medium/error/high/critical)'
    required: false
    default: 'medium'
  compatibility:
    description: 'Minimum compatibility threshold for fixes (unknown/low/medium/high)'
    required: false
    default: 'medium'
  branch_prefix:
    description: 'Prefix for the created branch'
    required: false
    default: 'autofix'
  disable_branch:
    description: 'Disable creating new branches'
    required: false
    default: 'false'
  disable_pr:
    description: 'Disable creating pull requests'
    required: false
    default: 'false'
  force_pr_creation:
    description: 'Force push commits to existing PR'
    required: false
    default: 'false'

outputs:
  pr_url:
    description: 'URL of the created pull request'
    value: ${{ steps.autofix.outputs.pr_url }}

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Set up pip cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install 'patchwork-cli[security]'

    - name: Run Autofix
      id: autofix
      shell: bash
      run: |
        args=()
        args+=("github_api_key=${{ inputs.github_token }}")
        if [ -n "${{ inputs.openai_api_key }}" ]; then
          args+=("openai_api_key=${{ inputs.openai_api_key }}")
        fi
        if [ -n "${{ inputs.patched_api_key }}" ]; then
          args+=("patched_api_key=${{ inputs.patched_api_key }}")
        fi
        args+=(
          "model=${{ inputs.model }}"
          "client_base_url=${{ inputs.client_base_url }}"
          "vulnerability_limit=${{ inputs.vulnerability_limit }}"
          "severity=${{ inputs.severity }}"
          "compatibility=${{ inputs.compatibility }}"
          "branch_prefix=${{ inputs.branch_prefix }}"
          "disable_branch=${{ inputs.disable_branch }}"
          "disable_pr=${{ inputs.disable_pr }}"
          "force_pr_creation=${{ inputs.force_pr_creation }}"
        )
        patchwork AutoFix "${args[@]}"
